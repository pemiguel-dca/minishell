Builtins

unset -> Deletes variables during program execution and removes both functions and shell variables.

echo -> Displays a line of text
	-n option:
		doesn't output the trailing newline

pwd -> Prints the name of the current/working directory

cd -> Change the current directory to "option"
	cd [option]

export -> Mark each name to be passed to child processes in the environment

env -> With no arguments or options, this command prints out a list of all environment variables

exit -> Terminates a process

Redirections

< -> redirect input
	Example: "< text.txt" prints what's in text.txt file

> -> redirect output
	Example: "ls >text.txt" puts 'ls' result in text.txt file

<< -> read the input until a line contains the delimiter passed
	Example: "<< EOF" reads until input = "EOF"
		heredoc> ola      
		heredoc> tudo bem
		heredoc> EOF
	EOF reached, now print all strings before EOF
		ola
		tudo bem

>> -> redirects output in append mode
	Example: ">>text.txt " after executing whatever you right get appended in text.txt file

We also have to implement pipes (| character).
The output of each command in the pipeline is connected to the input of the next command via a pipe.

Example: "cat text.txt | wc -l", in this example we will get the number of lines in text.txt file

Handle environment variables ($ followed by a sequence of characters) which
should expand to their values. (not sure how still)

















